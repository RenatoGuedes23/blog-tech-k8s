# .github/workflows/deploy_to_eks.yml
name: Deploy to EKS Cluster

on:
  push:
    branches:
      - main # Dispara o workflow em pushes para a branch 'main' (ajuste se usar outra)
  workflow_dispatch: # Permite disparar o workflow manualmente na interface do GitHub

env:
  AWS_REGION: us-east-1 # Confirme que esta √© a regi√£o do seu EKS

jobs:
  deploy-to-eks:
    name: Apply Kubernetes Manifests
    runs-on: ubuntu-latest # O runner que executar√° as a√ß√µes
    permissions:
      contents: read # Permiss√£o padr√£o para checkout do c√≥digo
      id-token: write # Essencial para o AWS OIDC e autentica√ß√£o com EKS

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Obt√©m o c√≥digo do seu reposit√≥rio (onde est√£o os YAMLs)

      - name: Configure AWS credentials using Access Keys
        uses: aws-actions/configure-aws-credentials@v4 # Configura as credenciais AWS
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Certifique-se que o nome do secret est√° correto
          aws-region: ${{ env.AWS_REGION }}

      # --- ETAPAS DE DEPLOY PARA O KUBERNETES ---

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3 # Instala ou garante que o kubectl est√° dispon√≠vel

      - name: Configure kubeconfig for EKS
        uses: aws-actions/amazon-eks-setup@v3 # Configura o kubeconfig para o seu cluster EKS
        with:
          cluster-name: opm-prod # <-- ATEN√á√ÉO: SUBSTITUA PELO NOME DO SEU CLUSTER EKS!
          aws-region: ${{ env.AWS_REGION }}

      - name: Apply Kubernetes DB Deployment
        run: |
          # Assume que 'db-deployment.yaml' est√° na raiz do seu reposit√≥rio.
          # Se estiver em uma subpasta (ex: k8s/), ajuste para 'k8s/db-deployment.yaml'
          kubectl apply -f db-deployment.yaml
          echo "‚úÖ db-deployment.yaml aplicado."
          kubectl rollout status deployment/db-deployment --timeout=5m # Opcional: espera o deploy ficar pronto

      - name: Apply Kubernetes Backend Deployment
        run: |
          # Assume que 'backend-deployment.yaml' est√° na raiz do seu reposit√≥rio.
          # Se estiver em uma subpasta (ex: k8s/), ajuste para 'k8s/backend-deployment.yaml'
          kubectl apply -f backend-deployment.yaml
          echo "‚úÖ backend-deployment.yaml aplicado."
          kubectl rollout status deployment/backend-deployment --timeout=5m # Opcional: espera o deploy ficar pronto

      - name: Check Kubernetes Service Status
        run: |
          echo "üåê Status dos servi√ßos Kubernetes:"
          kubectl get svc backend db
          echo "üöÄ Deploy finalizado!"